{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\dinospace\\\\dinospace\\\\client\\\\src\\\\restaurant\\\\Reservation.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Container, Row, Col, Carousel, Form, Button, Table } from \"react-bootstrap\";\nimport dinoLogo from \"../auth/images/dinoLogo.png\";\nimport bg from \"../auth/images/bg9.jpg\";\nimport \"../css/table.css\";\nimport \"../css/profile.css\";\nimport Select from \"react-select\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reservation = () => {\n  _s();\n\n  const params = useParams(); /// console.log(params);\n\n  const restaurantID = params.id;\n  const [reservationName, setReserveName] = useState(\"\");\n  const [date, setReserveDate] = useState(\"\");\n  const [person, setReservePerson] = useState(1);\n  const [time, setReservetime] = useState(1);\n  const [option2, setReserveoption] = useState(\"\");\n  const [optionname, setReserveoptionname] = useState(\"\");\n  const [initialState, setInitialState] = useState([]);\n  const [initialState2, setInitialState2] = useState([]);\n\n  const timeComparison = () => {\n    if (time >= initialState.openTime && time <= initialState.closeTime) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const handleSubmit = async () => {\n    console.log(\"lol\" + restaurantID);\n    const newReserve = {\n      restaurantID,\n      option2,\n      optionname,\n      reservationName,\n      date,\n      person,\n      reserve_status: \"DONE\",\n      time\n    };\n    console.log(newReserve);\n\n    try {\n      fetch(`/post/${restaurantID}`).then(res => {\n        return res.json();\n      }).then(jsonResponse => setInitialState(jsonResponse)); //test run for time validation of reservation\n      // if(timeComparison()){\n      //     console.log(\"ok\");\n      // }\n      // else{\n      //     console.log(\"not ok\");\n      // }\n\n      fetch(`/offer/${restaurantID}`).then(res => {\n        return res.json();\n      }).then(jsonResponse => {\n        setInitialState2(jsonResponse);\n      });\n      console.log(\"INITIALSTATE:\" + initialState2);\n      let remainingSits = 0;\n      let seatfound = false;\n      initialState2.forEach(element => {\n        if (element._id == option2) {\n          console.log(\"we are watching\" + element.remainingSits);\n          remainingSits = element.remainingSits - person;\n          console.log(\"we are watching\" + remainingSits);\n\n          if (remainingSits < 0) {\n            alert(\"sorry, there is not enough seats available\");\n          } else {\n            seatfound = true;\n            setReserveoptionname(element.offeringName);\n            console.log(\"we are watching offering name\" + optionname);\n          }\n        }\n      });\n\n      if (seatfound) {\n        const response = await axios.post('/reserve/', newReserve);\n        console.log(response);\n        const response3 = await axios.patch(`/offer/${option2}`, {\n          remainingSits\n        });\n      } else {\n        alert(\"sorry, your reservation isnt processed for server issues\");\n      } //this is working but in line 57 \n      //it is not working as it cannot current accss remainig sit \n\n    } catch (error) {\n      console.log(error);\n    }\n  }; //making options dropdown\n\n\n  const [options, setOptions] = useState(null);\n  useEffect(() => {\n    getoptions();\n  }, []);\n\n  async function getoptions() {\n    const {\n      data\n    } = await axios.get(`/offer/${restaurantID}`);\n    const option = data.map(item => ({\n      \"value\": item._id,\n      \"label\": item.offeringName\n    }));\n    console.log(\"we are seening option: \" + option);\n    setOptions(option);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"background\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"bg2\",\n      src: bg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"/\",\n      className: \"navlogo\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"dinologo\",\n        src: dinoLogo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"links2\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/SignUp\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/LogIn\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/Profile\",\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"reserve\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          id: \"reserve\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            id: \"reserve\",\n            children: \"Reservation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"reserve\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              id: \"reserve\",\n              children: \"Reservation Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              onChange: e => setReserveName(e.target.value),\n              placeholder: \"Reservation Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"reserve\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              id: \"reserve\",\n              children: \"Reservation Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"date\",\n              onChange: e => setReserveDate(e.target.value),\n              placeholder: \"Reservation Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"reserve\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              id: \"reserve\",\n              children: \"Total person\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"Number\",\n              onChange: e => setReservePerson(e.target.value),\n              placeholder: \"Total Person\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"mb-3\",\n            controlId: \"reserve\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              id: \"reserve\",\n              children: \"Choose option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Select, {\n              options: options,\n              onChange: e => setReserveoption(e.value),\n              name: \"subjects\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            id: \"reserve\",\n            variant: \"primary\",\n            type: \"submit\",\n            value: \"Submit\",\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Reservation, \"gIujT/bx7XqFojP+ktGmmiVF7yM=\", false, function () {\n  return [useParams];\n});\n\n_c = Reservation;\nexport default Reservation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reservation\");","map":{"version":3,"sources":["D:/Projects/dinospace/dinospace/client/src/restaurant/Reservation.js"],"names":["React","axios","useEffect","useState","Container","Row","Col","Carousel","Form","Button","Table","dinoLogo","bg","Select","useParams","Reservation","params","restaurantID","id","reservationName","setReserveName","date","setReserveDate","person","setReservePerson","time","setReservetime","option2","setReserveoption","optionname","setReserveoptionname","initialState","setInitialState","initialState2","setInitialState2","timeComparison","openTime","closeTime","handleSubmit","console","log","newReserve","reserve_status","fetch","then","res","json","jsonResponse","remainingSits","seatfound","forEach","element","_id","alert","offeringName","response","post","response3","patch","error","options","setOptions","getoptions","data","get","option","map","item","e","target","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Carousel,\r\n  Form,\r\n  Button,\r\n  Table,\r\n} from \"react-bootstrap\";\r\nimport dinoLogo from \"../auth/images/dinoLogo.png\";\r\nimport bg from \"../auth/images/bg9.jpg\";\r\nimport \"../css/table.css\";\r\nimport \"../css/profile.css\";\r\nimport Select from \"react-select\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Reservation = () => {\r\n    const params = useParams();\r\n   /// console.log(params);\r\n    const restaurantID=params.id;\r\n    const[reservationName,setReserveName]=useState(\"\");\r\n    const[date,setReserveDate]=useState(\"\");\r\n    const[person,setReservePerson]=useState(1);\r\n    const[time,setReservetime]=useState(1);\r\n    const[option2,setReserveoption]=useState(\"\");\r\n    const[optionname,setReserveoptionname]=useState(\"\");\r\n    const[initialState,setInitialState]=useState([]);\r\n    const[initialState2,setInitialState2]=useState([]);\r\n    const timeComparison=() => {\r\n        if(time>=initialState.openTime && time<=initialState.closeTime){\r\n            return true;\r\n        }\r\n        else{\r\n            return false;\r\n        }\r\n    }\r\n    const handleSubmit=async()=>{\r\n        console.log(\"lol\"+ restaurantID);\r\n        const newReserve={\r\n            restaurantID,\r\n            option2,\r\n            optionname,\r\n            reservationName,\r\n            date,\r\n            person,\r\n            reserve_status:\"DONE\",\r\n            time\r\n        }\r\n        console.log(newReserve);\r\n        try {\r\n            fetch(`/post/${restaurantID}`).then(res => {\r\n                return res.json();\r\n            }).then(jsonResponse => setInitialState(jsonResponse));\r\n            //test run for time validation of reservation\r\n            // if(timeComparison()){\r\n            //     console.log(\"ok\");\r\n            // }\r\n            // else{\r\n            //     console.log(\"not ok\");\r\n            // }\r\n            fetch(`/offer/${restaurantID}`).then(res => {\r\n                return res.json();\r\n            }).then(jsonResponse => { setInitialState2(jsonResponse);});             \r\n            console.log(\"INITIALSTATE:\" + initialState2);\r\n            let remainingSits=0;\r\n            let seatfound=false;\r\n            initialState2.forEach(element => {\r\n                if (element._id == option2){\r\n                    console.log(\"we are watching\" + element.remainingSits);\r\n                    remainingSits=element.remainingSits-person;\r\n                    console.log(\"we are watching\" + remainingSits);\r\n                    if(remainingSits<0){\r\n                        alert(\"sorry, there is not enough seats available\");\r\n                    }\r\n                    else{\r\n                        seatfound=true;\r\n                        setReserveoptionname(element.offeringName);\r\n                        console.log(\"we are watching offering name\" + optionname);\r\n                    }\r\n                }\r\n            })\r\n           \r\n            \r\n           \r\n            if(seatfound){\r\n                const response = await axios.post('/reserve/', newReserve);\r\n                console.log(response);\r\n                const response3= await axios.patch(`/offer/${option2}`, {remainingSits});\r\n            }\r\n            else{\r\n                alert(\"sorry, your reservation isnt processed for server issues\");\r\n            }\r\n           //this is working but in line 57 \r\n                                                                                    //it is not working as it cannot current accss remainig sit \r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    //making options dropdown\r\n    const [ options, setOptions ] = useState(null);\r\n    useEffect(() => {\r\n        getoptions();\r\n    }, []);\r\n    async function getoptions(){\r\n    const { data } = await axios.get(`/offer/${restaurantID}`)\r\n    const option = data.map((item)=>({\r\n        \"value\" : item._id,\r\n        \"label\" : item.offeringName\r\n    }))\r\n    console.log(\"we are seening option: \"+option);\r\n    setOptions (option)\r\n    }\r\n\r\n    return (\r\n        <div className=\"background\">\r\n          {/* <Navbar2 /> */}\r\n          <img className=\"bg2\" src={bg} />\r\n          <a href=\"/\" className=\"navlogo\">\r\n            {/* <div data-aos=\"fade-right\" className=\"fade\"> */}\r\n            <img className=\"dinologo\" src={dinoLogo} />\r\n            {/* </div> */}\r\n          </a>\r\n    \r\n          <div className=\"links2\">\r\n            <a href=\"/SignUp\">Sign Up</a>\r\n            <a href=\"/LogIn\">Sign In</a>\r\n            <a href=\"/Profile\">Profile</a>\r\n          </div>\r\n    \r\n          <div className=\"profile\">\r\n            {/* <div data-aos=\"zoom-in-up\" className=\"fade\"> */}\r\n            {/* <div className=\"justify-content-md-center\"> */}\r\n            {/* <h1 id=\"rname\">Welcome To {initialState.name}</h1> */}\r\n            {/* <Container>\r\n                <Row> */}\r\n            {/* <div className=\"info\">\r\n              <h3>Restaurant Details</h3>\r\n              <p id=\"rname\">Cuisine: {initialState.cuisine}</p>\r\n              <p id=\"rname\">Location: {initialState.location}</p>\r\n              <p id=\"rname\">Rating: {initialState.rating}</p>\r\n            </div>\r\n     */}\r\n            <div id=\"reserve\">\r\n              <Form id=\"reserve\">\r\n                <h3 id=\"reserve\">Reservation</h3>\r\n                <Form.Group className=\"mb-3\" controlId=\"reserve\">\r\n                  <Form.Label id=\"reserve\">Reservation Name</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    onChange={(e) => setReserveName(e.target.value)}\r\n                    placeholder=\"Reservation Name\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"reserve\">\r\n                  <Form.Label id=\"reserve\">Reservation Date</Form.Label>\r\n                  <Form.Control\r\n                    type=\"date\"\r\n                    onChange={(e) => setReserveDate(e.target.value)}\r\n                    placeholder=\"Reservation Date\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"reserve\">\r\n                  <Form.Label id=\"reserve\">Total person</Form.Label>\r\n                  <Form.Control\r\n                    type=\"Number\"\r\n                    onChange={(e) => setReservePerson(e.target.value)}\r\n                    placeholder=\"Total Person\"\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group className=\"mb-3\" controlId=\"reserve\">\r\n                  <Form.Label id=\"reserve\">Choose option</Form.Label>\r\n                  <Select\r\n                    options={options}\r\n                    onChange={(e) => setReserveoption(e.value)}\r\n                    name=\"subjects\"\r\n                  />\r\n                </Form.Group>\r\n                <Button\r\n                  id=\"reserve\"\r\n                  variant=\"primary\"\r\n                  type=\"submit\"\r\n                  value=\"Submit\"\r\n                  onClick={handleSubmit}\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Form>\r\n            </div>\r\n            {/* </Row>\r\n              </Container> */}\r\n    \r\n            {/* <Carousel>\r\n              <Carousel.Item>\r\n                <img className=\"restaurant-interior\" src={dine} />\r\n              </Carousel.Item>{\" \"}\r\n              <Carousel.Item>\r\n                <img className=\"restaurant-interior\" src={dine3} />\r\n              </Carousel.Item>{\" \"}\r\n              <Carousel.Item>\r\n                <img className=\"restaurant-interior\" src={dine4} />\r\n              </Carousel.Item>\r\n            </Carousel> */}\r\n            {/* </div> */}\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n    \r\n    export default Reservation;\r\n    "]},"metadata":{},"sourceType":"module"}