{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\dinospace\\\\dinospace\\\\client\\\\src\\\\restaurant\\\\setTime.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Form, Button, Table } from \"react-bootstrap\";\nimport dinoLogo from \"../auth/images/dinoLogo.png\";\nimport bg from \"../auth/images/bg4.jpg\";\nimport \"../css/table.css\";\nimport \"../css/profile.css\";\nimport jwt from \"jsonwebtoken\";\nimport \"../css/table.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SetTime = () => {\n  _s();\n\n  const [openTime, setOpenTime] = useState(\"\");\n  const [closeTime, setCloseTime] = useState(\"\");\n\n  const handleSubmit2 = async event => {\n    //console.log(reserveStatus);\n    event.preventDefault();\n    const newTime = {\n      openTime: openTime,\n      closeTime: closeTime\n    };\n    console.log(newTime);\n    const token = localStorage.getItem('token');\n    const decoded = jwt.decode(token);\n    console.log(decoded);\n    const resID = decoded.id;\n\n    try {\n      const response = await axios.patch(`post/${resID}`, {\n        newTime: newTime\n      });\n      console.log(response);\n\n      if (response.status == 200) {\n        alert(\"Time successfully changed\");\n      } else {\n        alert(\"Time not changed due to connectivity prob\");\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Set Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Open Time\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          name: \"openTime\",\n          onChange: e => {\n            setOpenTime(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Close Time\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"time\",\n          name: \"closeTime\",\n          onChange: e => {\n            setCloseTime(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Set Open Close Time\",\n        onClick: handleSubmit2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 14\n  }, this);\n};\n\n_s(SetTime, \"ThmcyJsdyIvXxX1o9nALE6oP1qs=\");\n\n_c = SetTime;\nexport default SetTime;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetTime\");","map":{"version":3,"sources":["D:/Projects/dinospace/dinospace/client/src/restaurant/setTime.js"],"names":["React","axios","useEffect","useState","Form","Button","Table","dinoLogo","bg","jwt","SetTime","openTime","setOpenTime","closeTime","setCloseTime","handleSubmit2","event","preventDefault","newTime","console","log","token","localStorage","getItem","decoded","decode","resID","id","response","patch","status","alert","error","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,KAAvB,QAAoC,iBAApC;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,OAAOC,EAAP,MAAe,wBAAf;AACA,OAAO,kBAAP;AACA,OAAO,oBAAP;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAO,kBAAP;;;AACA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,EAAD,CAA1C;;AACA,QAAMY,aAAa,GAAG,MAAOC,KAAP,IAAiB;AACnC;AACAA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,OAAO,GAAG;AACZP,MAAAA,QAAQ,EAAEA,QADE;AAEZE,MAAAA,SAAS,EAAEA;AAFC,KAAhB;AAIAM,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,UAAMG,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACA,UAAMC,OAAO,GAAGf,GAAG,CAACgB,MAAJ,CAAWJ,KAAX,CAAhB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYI,OAAZ;AACA,UAAME,KAAK,GAAGF,OAAO,CAACG,EAAtB;;AACA,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAM3B,KAAK,CAAC4B,KAAN,CAAa,QAAOH,KAAM,EAA1B,EAA6B;AAAER,QAAAA,OAAO,EAAEA;AAAX,OAA7B,CAAvB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAZ;;AACA,UAAGA,QAAQ,CAACE,MAAT,IAAiB,GAApB,EAAwB;AACpBC,QAAAA,KAAK,CAAC,2BAAD,CAAL;AACH,OAFD,MAGK;AACDA,QAAAA,KAAK,CAAC,2CAAD,CAAL;AACH;AAEJ,KAXD,CAWE,OAAOC,KAAP,EAAc;AACZb,MAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACH;AACJ,GA3BD;;AA4BA,sBAAS;AAAA,4BACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADK,eAEL;AAAA,8BACQ;AAAA,6CACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,UAAxB;AAAmC,UAAA,QAAQ,EAAEC,CAAC,IAAI;AAAErB,YAAAA,WAAW,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AAA6B;AAAjF;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADR,eAIQ;AAAA,8CACI;AAAO,UAAA,IAAI,EAAC,MAAZ;AAAmB,UAAA,IAAI,EAAC,WAAxB;AAAoC,UAAA,QAAQ,EAAEF,CAAC,IAAI;AAAEnB,YAAAA,YAAY,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AAA8B;AAAnF;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJR,eAOQ;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC,qBAA3B;AAAiD,QAAA,OAAO,EAAEpB;AAA1D;AAAA;AAAA;AAAA;AAAA,cAPR;AAAA;AAAA;AAAA;AAAA;AAAA,YAFK;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AAYH,CA3CD;;GAAML,O;;KAAAA,O;AA6CN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Form, Button, Table } from \"react-bootstrap\";\r\nimport dinoLogo from \"../auth/images/dinoLogo.png\";\r\nimport bg from \"../auth/images/bg4.jpg\";\r\nimport \"../css/table.css\";\r\nimport \"../css/profile.css\";\r\nimport jwt from \"jsonwebtoken\";\r\nimport \"../css/table.css\";\r\nconst SetTime = () => {\r\n    const [openTime, setOpenTime] = useState(\"\");\r\n    const [closeTime, setCloseTime] = useState(\"\");\r\n    const handleSubmit2 = async (event) => {\r\n        //console.log(reserveStatus);\r\n        event.preventDefault();\r\n\r\n        const newTime = {\r\n            openTime: openTime,\r\n            closeTime: closeTime\r\n        };\r\n        console.log(newTime);\r\n        const token = localStorage.getItem('token');\r\n        const decoded = jwt.decode(token);\r\n        console.log(decoded);\r\n        const resID = decoded.id;\r\n        try {\r\n            const response = await axios.patch(`post/${resID}`, { newTime: newTime });\r\n\r\n            console.log(response);\r\n            if(response.status==200){\r\n                alert(\"Time successfully changed\");\r\n            }\r\n            else {\r\n                alert(\"Time not changed due to connectivity prob\");\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    return ( <div>\r\n        <h1>Set Time</h1>\r\n        <form>\r\n                <label>Open Time\r\n                    <input type=\"time\" name=\"openTime\" onChange={e => { setOpenTime(e.target.value) }} />\r\n                </label>\r\n                <label>Close Time\r\n                    <input type=\"time\" name=\"closeTime\" onChange={e => { setCloseTime(e.target.value) }} />\r\n                </label>\r\n                <input type=\"submit\" value=\"Set Open Close Time\" onClick={handleSubmit2} />\r\n            </form>\r\n    </div> );\r\n}\r\n \r\nexport default SetTime;"]},"metadata":{},"sourceType":"module"}