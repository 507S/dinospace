{"ast":null,"code":"var _jsxFileName = \"E:\\\\SEM 4\\\\Software Project Lab 2\\\\SPL_new\\\\dinospace\\\\client\\\\src\\\\reservation\\\\Reserve.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport axios from 'axios';\nimport Select from 'react-select';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport jwt from \"jsonwebtoken\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reserve = () => {\n  _s();\n\n  const params = useParams(); /// console.log(params);\n\n  const restaurantID = params.id;\n  const [reservationName, setReserveName] = useState(\"\");\n  const [date, setReserveDate] = useState(\"\");\n  const [person, setReservePerson] = useState(1);\n  const [time, setReservetime] = useState(1);\n  const [option2, setReserveoption] = useState(\"\");\n  const [optionname, setReserveoptionname] = useState(\"\");\n  const [initialState, setInitialState] = useState([]);\n  const [initialState2, setInitialState2] = useState([]);\n\n  const timeComparison = () => {\n    if (time >= initialState.openTime && time <= initialState.closeTime) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  const usertoken = localStorage.getItem(\"usertoken\");\n  console.log(usertoken);\n  const decodeduser = jwt.decode(usertoken);\n  console.log(decodeduser);\n\n  const handleSubmit = async () => {\n    if (decodeduser != null) {\n      const userID = decodeduser.id;\n      console.log(\"lol\" + restaurantID);\n      const newReserve = {\n        userID,\n        restaurantID,\n        option2,\n        optionname,\n        reservationName,\n        date,\n        person,\n        reserve_status: \"DONE\",\n        time\n      };\n      console.log(newReserve);\n\n      try {\n        fetch(`/post/${restaurantID}`).then(res => {\n          return res.json();\n        }).then(jsonResponse => setInitialState(jsonResponse)); //test run for time validation of reservation\n        // if(timeComparison()){\n        //     console.log(\"ok\");\n        // }\n        // else{\n        //     console.log(\"not ok\");\n        // }\n\n        fetch(`/offer/${restaurantID}`).then(res => {\n          return res.json();\n        }).then(jsonResponse => {\n          setInitialState2(jsonResponse);\n        });\n        console.log(\"INITIALSTATE:\" + initialState2);\n        let remainingSits = 0;\n        let seatfound = false;\n        initialState2.forEach(element => {\n          if (element._id == option2) {\n            console.log(\"we are watching\" + element.remainingSits);\n            remainingSits = element.remainingSits - person; // console.log(\"we are watching\" + remainingSits);\n\n            if (element.remainingSits < person) {\n              alert(\"sorry, there is not enough seats available\");\n            } else {\n              seatfound = true;\n              setReserveoptionname(element.offeringName);\n              console.log(\"we are watching offering name\" + optionname);\n              alert(\"your reservation has been made\"); // remainingsits = element.remainingSits - person;\n            }\n          }\n        });\n\n        if (seatfound) {\n          const response = await axios.post('/reserve/', newReserve);\n          console.log(response);\n          const response3 = await axios.patch(`/offer/${option2}`, {\n            remainingSits\n          });\n        } else {\n          alert(\"sorry, your reservation isnt processed for server issues\");\n        } //this is working but in line 57 \n        //it is not working as it cannot current accss remainig sit \n\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      alert(\"please login to reserve\");\n    }\n  }; //making options dropdown\n\n\n  const [options, setOptions] = useState(null);\n  useEffect(() => {\n    getoptions();\n  }, []);\n\n  async function getoptions() {\n    const {\n      data\n    } = await axios.get(`/offer/${restaurantID}`);\n    const option = data.map(item => ({\n      \"value\": item._id,\n      \"label\": item.offeringName\n    })); // option.add({\n    //     \"value\": \"\",\n    //     \"label\": \"Select an option\"\n    // })\n\n    console.log(\"we are seening option: \" + option);\n    setOptions(option);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Reservation Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setReserveName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Reserving date\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        onChange: e => setReserveDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Number of Person\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"Number\",\n        onChange: e => setReservePerson(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Which offerings you want to attend\", /*#__PURE__*/_jsxDEV(Select, {\n        options: options,\n        defaultValue: \"Choose\",\n        onChange: e => setReserveoption(e.value),\n        name: \"subjects\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      onClick: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Reserve, \"h91cp3cs/ovtR8lU8IL2cLxLSMg=\", false, function () {\n  return [useParams];\n});\n\n_c = Reserve;\nexport default Reserve;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reserve\");","map":{"version":3,"sources":["E:/SEM 4/Software Project Lab 2/SPL_new/dinospace/client/src/reservation/Reserve.js"],"names":["React","axios","Select","useEffect","useState","useParams","jwt","Reserve","params","restaurantID","id","reservationName","setReserveName","date","setReserveDate","person","setReservePerson","time","setReservetime","option2","setReserveoption","optionname","setReserveoptionname","initialState","setInitialState","initialState2","setInitialState2","timeComparison","openTime","closeTime","usertoken","localStorage","getItem","console","log","decodeduser","decode","handleSubmit","userID","newReserve","reserve_status","fetch","then","res","json","jsonResponse","remainingSits","seatfound","forEach","element","_id","alert","offeringName","response","post","response3","patch","error","options","setOptions","getoptions","data","get","option","map","item","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,GAAP,MAAgB,cAAhB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAClB,QAAMC,MAAM,GAAGH,SAAS,EAAxB,CADkB,CAElB;;AACA,QAAMI,YAAY,GAAGD,MAAM,CAACE,EAA5B;AACA,QAAM,CAACC,eAAD,EAAkBC,cAAlB,IAAoCR,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACS,IAAD,EAAOC,cAAP,IAAyBV,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACW,MAAD,EAASC,gBAAT,IAA6BZ,QAAQ,CAAC,CAAD,CAA3C;AACA,QAAM,CAACa,IAAD,EAAOC,cAAP,IAAyBd,QAAQ,CAAC,CAAD,CAAvC;AACA,QAAM,CAACe,OAAD,EAAUC,gBAAV,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACiB,UAAD,EAAaC,oBAAb,IAAqClB,QAAQ,CAAC,EAAD,CAAnD;AACA,QAAM,CAACmB,YAAD,EAAeC,eAAf,IAAkCpB,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACqB,aAAD,EAAgBC,gBAAhB,IAAoCtB,QAAQ,CAAC,EAAD,CAAlD;;AACA,QAAMuB,cAAc,GAAG,MAAM;AACzB,QAAIV,IAAI,IAAIM,YAAY,CAACK,QAArB,IAAiCX,IAAI,IAAIM,YAAY,CAACM,SAA1D,EAAqE;AACjE,aAAO,IAAP;AACH,KAFD,MAGK;AACD,aAAO,KAAP;AACH;AACJ,GAPD;;AAQA,QAAMC,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAlB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,SAAZ;AACA,QAAMK,WAAW,GAAG7B,GAAG,CAAC8B,MAAJ,CAAWN,SAAX,CAApB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ;;AAGA,QAAME,YAAY,GAAG,YAAY;AAC7B,QAAIF,WAAW,IAAI,IAAnB,EAAyB;AACrB,YAAMG,MAAM,GAAGH,WAAW,CAACzB,EAA3B;AACAuB,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAQzB,YAApB;AACA,YAAM8B,UAAU,GAAG;AACfD,QAAAA,MADe;AAEf7B,QAAAA,YAFe;AAGfU,QAAAA,OAHe;AAIfE,QAAAA,UAJe;AAKfV,QAAAA,eALe;AAMfE,QAAAA,IANe;AAOfE,QAAAA,MAPe;AAQfyB,QAAAA,cAAc,EAAE,MARD;AASfvB,QAAAA;AATe,OAAnB;AAWAgB,MAAAA,OAAO,CAACC,GAAR,CAAYK,UAAZ;;AAEA,UAAI;AACAE,QAAAA,KAAK,CAAE,SAAQhC,YAAa,EAAvB,CAAL,CAA+BiC,IAA/B,CAAoCC,GAAG,IAAI;AACvC,iBAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,SAFD,EAEGF,IAFH,CAEQG,YAAY,IAAIrB,eAAe,CAACqB,YAAD,CAFvC,EADA,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAJ,QAAAA,KAAK,CAAE,UAAShC,YAAa,EAAxB,CAAL,CAAgCiC,IAAhC,CAAqCC,GAAG,IAAI;AACxC,iBAAOA,GAAG,CAACC,IAAJ,EAAP;AACH,SAFD,EAEGF,IAFH,CAEQG,YAAY,IAAI;AAAEnB,UAAAA,gBAAgB,CAACmB,YAAD,CAAhB;AAAiC,SAF3D;AAGAZ,QAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBT,aAA9B;AACA,YAAIqB,aAAa,GAAG,CAApB;AACA,YAAIC,SAAS,GAAG,KAAhB;AACAtB,QAAAA,aAAa,CAACuB,OAAd,CAAsBC,OAAO,IAAI;AAC7B,cAAIA,OAAO,CAACC,GAAR,IAAe/B,OAAnB,EAA4B;AACxBc,YAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBe,OAAO,CAACH,aAAxC;AACCA,YAAAA,aAAa,GAAGG,OAAO,CAACH,aAAR,GAAwB/B,MAAxC,CAFuB,CAGxB;;AACA,gBAAIkC,OAAO,CAACH,aAAR,GAAwB/B,MAA5B,EAAoC;AAChCoC,cAAAA,KAAK,CAAC,4CAAD,CAAL;AACH,aAFD,MAGK;AACDJ,cAAAA,SAAS,GAAG,IAAZ;AACAzB,cAAAA,oBAAoB,CAAC2B,OAAO,CAACG,YAAT,CAApB;AACAnB,cAAAA,OAAO,CAACC,GAAR,CAAY,kCAAkCb,UAA9C;AACA8B,cAAAA,KAAK,CAAC,gCAAD,CAAL,CAJC,CAKD;AACH;AACJ;AACJ,SAhBD;;AAoBA,YAAIJ,SAAJ,EAAe;AACX,gBAAMM,QAAQ,GAAG,MAAMpD,KAAK,CAACqD,IAAN,CAAW,WAAX,EAAwBf,UAAxB,CAAvB;AACAN,UAAAA,OAAO,CAACC,GAAR,CAAYmB,QAAZ;AACA,gBAAME,SAAS,GAAG,MAAMtD,KAAK,CAACuD,KAAN,CAAa,UAASrC,OAAQ,EAA9B,EAAiC;AAAE2B,YAAAA;AAAF,WAAjC,CAAxB;AACH,SAJD,MAKK;AACDK,UAAAA,KAAK,CAAC,0DAAD,CAAL;AACH,SA5CD,CA6CA;AACA;;AACH,OA/CD,CA+CE,OAAOM,KAAP,EAAc;AACZxB,QAAAA,OAAO,CAACC,GAAR,CAAYuB,KAAZ;AACH;AACJ,KAlED,MAmEI;AACAN,MAAAA,KAAK,CAAC,yBAAD,CAAL;AACH;AACJ,GAvED,CA1BkB,CAkGlB;;;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBvD,QAAQ,CAAC,IAAD,CAAtC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZyD,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;;AAGA,iBAAeA,UAAf,GAA4B;AACxB,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAM5D,KAAK,CAAC6D,GAAN,CAAW,UAASrD,YAAa,EAAjC,CAAvB;AACA,UAAMsD,MAAM,GAAGF,IAAI,CAACG,GAAL,CAAUC,IAAD,KAAW;AAC/B,eAASA,IAAI,CAACf,GADiB;AAE/B,eAASe,IAAI,CAACb;AAFiB,KAAX,CAAT,CAAf,CAFwB,CAMxB;AACA;AACA;AACA;;AACAnB,IAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4B6B,MAAxC;AACAJ,IAAAA,UAAU,CAACI,MAAD,CAAV;AACH;;AACD,sBACI;AAAA,4BACI;AAAA,kDAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAEG,CAAC,IAAItD,cAAc,CAACsD,CAAC,CAACC,MAAF,CAASC,KAAV;AAAhD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAA,gDAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,QAAQ,EAAEF,CAAC,IAAIpD,cAAc,CAACoD,CAAC,CAACC,MAAF,CAASC,KAAV;AAAhD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eASI;AAAA,kDAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,QAAQ,EAAEF,CAAC,IAAIlD,gBAAgB,CAACkD,CAAC,CAACC,MAAF,CAASC,KAAV;AAApD;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YATJ,eAaI;AAAA,oEAEI,QAAC,MAAD;AACI,QAAA,OAAO,EAAEV,OADb;AAEI,QAAA,YAAY,EAAE,QAFlB;AAGI,QAAA,QAAQ,EAAGQ,CAAD,IAAO9C,gBAAgB,CAAC8C,CAAC,CAACE,KAAH,CAHrC;AAII,QAAA,IAAI,EAAC;AAJT;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAbJ,eAsBI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAoC,MAAA,OAAO,EAAE/B;AAA7C;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH,CA9ID;;GAAM9B,O;UACaF,S;;;KADbE,O;AAgJN,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport Select from 'react-select'\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport jwt from \"jsonwebtoken\";\r\n\r\nconst Reserve = () => {\r\n    const params = useParams();\r\n    /// console.log(params);\r\n    const restaurantID = params.id;\r\n    const [reservationName, setReserveName] = useState(\"\");\r\n    const [date, setReserveDate] = useState(\"\");\r\n    const [person, setReservePerson] = useState(1);\r\n    const [time, setReservetime] = useState(1);\r\n    const [option2, setReserveoption] = useState(\"\");\r\n    const [optionname, setReserveoptionname] = useState(\"\");\r\n    const [initialState, setInitialState] = useState([]);\r\n    const [initialState2, setInitialState2] = useState([]);\r\n    const timeComparison = () => {\r\n        if (time >= initialState.openTime && time <= initialState.closeTime) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    }\r\n    const usertoken = localStorage.getItem(\"usertoken\");\r\n    console.log(usertoken);\r\n    const decodeduser = jwt.decode(usertoken);\r\n    console.log(decodeduser);\r\n\r\n    \r\n    const handleSubmit = async () => {\r\n        if (decodeduser != null) {\r\n            const userID = decodeduser.id;\r\n            console.log(\"lol\" + restaurantID);\r\n            const newReserve = {\r\n                userID,\r\n                restaurantID,\r\n                option2,\r\n                optionname,\r\n                reservationName,\r\n                date,\r\n                person,\r\n                reserve_status: \"DONE\",\r\n                time\r\n            }\r\n            console.log(newReserve);\r\n            \r\n            try {\r\n                fetch(`/post/${restaurantID}`).then(res => {\r\n                    return res.json();\r\n                }).then(jsonResponse => setInitialState(jsonResponse));\r\n                //test run for time validation of reservation\r\n                // if(timeComparison()){\r\n                //     console.log(\"ok\");\r\n                // }\r\n                // else{\r\n                //     console.log(\"not ok\");\r\n                // }\r\n                fetch(`/offer/${restaurantID}`).then(res => {\r\n                    return res.json();\r\n                }).then(jsonResponse => { setInitialState2(jsonResponse); });\r\n                console.log(\"INITIALSTATE:\" + initialState2);\r\n                let remainingSits = 0;\r\n                let seatfound = false;\r\n                initialState2.forEach(element => {\r\n                    if (element._id == option2) {\r\n                        console.log(\"we are watching\" + element.remainingSits);\r\n                         remainingSits = element.remainingSits - person;\r\n                        // console.log(\"we are watching\" + remainingSits);\r\n                        if (element.remainingSits < person) {\r\n                            alert(\"sorry, there is not enough seats available\");\r\n                        }\r\n                        else {\r\n                            seatfound = true;\r\n                            setReserveoptionname(element.offeringName);\r\n                            console.log(\"we are watching offering name\" + optionname);\r\n                            alert(\"your reservation has been made\");\r\n                            // remainingsits = element.remainingSits - person;\r\n                        }\r\n                    }\r\n                })\r\n\r\n\r\n\r\n                if (seatfound) {\r\n                    const response = await axios.post('/reserve/', newReserve);\r\n                    console.log(response);\r\n                    const response3 = await axios.patch(`/offer/${option2}`, { remainingSits });\r\n                }\r\n                else {\r\n                    alert(\"sorry, your reservation isnt processed for server issues\");\r\n                }\r\n                //this is working but in line 57 \r\n                //it is not working as it cannot current accss remainig sit \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        }\r\n        else{\r\n            alert(\"please login to reserve\");\r\n        }\r\n    }\r\n    //making options dropdown\r\n    const [options, setOptions] = useState(null);\r\n    useEffect(() => {\r\n        getoptions();\r\n    }, []);\r\n    async function getoptions() {\r\n        const { data } = await axios.get(`/offer/${restaurantID}`)\r\n        const option = data.map((item) => ({\r\n            \"value\": item._id,\r\n            \"label\": item.offeringName\r\n        }))\r\n        // option.add({\r\n        //     \"value\": \"\",\r\n        //     \"label\": \"Select an option\"\r\n        // })\r\n        console.log(\"we are seening option: \" + option);\r\n        setOptions(option)\r\n    }\r\n    return (\r\n        <div>\r\n            <label>\r\n                Reservation Name\r\n                <input type=\"text\" onChange={e => setReserveName(e.target.value)} />\r\n            </label>\r\n            <label>\r\n                Reserving date\r\n                <input type=\"date\" onChange={e => setReserveDate(e.target.value)} />\r\n            </label>\r\n            <label>\r\n                Number of Person\r\n                <input type=\"Number\" onChange={e => setReservePerson(e.target.value)} />\r\n            </label>\r\n            <label>\r\n                Which offerings you want to attend\r\n                <Select\r\n                    options={options}\r\n                    defaultValue={\"Choose\"}\r\n                    onChange={(e) => setReserveoption(e.value)}\r\n                    name=\"subjects\"\r\n                />\r\n            </label>\r\n            <input type=\"submit\" value=\"Submit\" onClick={handleSubmit} />\r\n\r\n        </div>);\r\n}\r\n\r\nexport default Reserve;"]},"metadata":{},"sourceType":"module"}